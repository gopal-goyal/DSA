int findPosition(int in[], int element, int n){
        for(int i = 0; i<n;i++){
            if(in[i] == element)
                return i;
        }
        return -1;
    }
    
    Node* solve(int in[], int pre[], int &index, int start, int end, int n){
        //base case
        if(index >= n || start > end){
            return NULL;
        }
        
        int element = pre[index++];
        Node* root = new Node(element);
        int position = findPosition(in , element, n); 
        
        root->left = solve(in,pre,index,start,position-1,n);
        root->right = solve(in,pre,index,position,end,n);
        
        return root;
    }
    
    Node* buildTree(int in[],int pre[], int n)
    {
        int index = 0;
        Node * ans = solve( in, pre, index, 0, n-1, n);
        return ans;
    }
};
