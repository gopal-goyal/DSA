void solveleft(Node* root , vector<int> &ans){
        if(root == NULL || (root->left == NULL && root->right == NULL)){
            return;
        }
        ans.push_back(root->data);
        if(root->left){
            solveleft(root->left , ans);
        }
        else{
            solveleft(root->right , ans);
        }
    }
    
    void solveleaf(Node *node , vector<int> &ans){
        if(node == NULL){
            return;
        }
        if(node->left == NULL && node->right == NULL){
            ans.push_back(node->data);
        }
        solveleaf(node->left , ans );
        solveleaf(node->right , ans );
    }
    void solveright(Node *node , vector<int> &ans){
        if(node == NULL){
            return;
        }
        if(node->left == NULL && node->right == NULL){
            return;
        }
       
        if(node->right){
            solveright(node->right , ans );
        }
        else{
            solveright(node->left, ans);
        }
         ans.push_back(node->data);
    }
    vector <int> boundary(Node *root)
    {
        //Your code here
        vector<int> ans;
        ans.push_back(root->data);
        solveleft(root->left , ans);
        solveleaf(root->left , ans);
        solveleaf(root->right , ans);
        solveright(root->right , ans);
        return ans;
    }
